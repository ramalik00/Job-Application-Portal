{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/rahul/JobApplication/frontend/src/components/recruiter/JobApplicants.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport { getProfilesByJobId, rejectApplication, shortlistApplication, acceptApplication } from '../../actions/aprofile';\nimport { getJobById } from '../../actions/job';\nimport { setAlert } from '../../actions/alert';\nimport Spinner from '../layout/Spinner';\nimport SortFeatureApplicant from './SortFeatureApplicant';\n\nconst JobApplicants = ({\n  match,\n  getProfilesByJobId,\n  getJobById,\n  setAlert,\n  rejectApplication,\n  shortlistApplication,\n  acceptApplication,\n  aprofile: {\n    loading,\n    aprofiles\n  },\n  job\n}) => {\n  _s();\n\n  useEffect(() => {\n    getProfilesByJobId(match.params.id);\n    getJobById(match.params.id);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: loading || job.loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 39\n    }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center heading\",\n        children: \"Applicants\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }, this), aprofiles.length > 0 ? /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(SortFeatureApplicant, {\n          jobId: match.params.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          className: \"btn btn-light m-1 login\",\n          to: \"/rec-job-listing\",\n          children: [\"Go Back \", /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa fa-backward\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 101\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 29\n        }, this), aprofiles.map(aprofile => /*#__PURE__*/_jsxDEV(Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"container bg-light m-1 border border-success\",\n            children: aprofile.applications.map(app => app.job === match.params.id && app.rejected === false && /*#__PURE__*/_jsxDEV(Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"text-center title\",\n                children: aprofile.user.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"field\",\n                children: \"Skills\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 31,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: aprofile.skills.length > 0 ? /*#__PURE__*/_jsxDEV(Fragment, {\n                  children: aprofile.skills.map(skill => /*#__PURE__*/_jsxDEV(\"li\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"fa fa-thumbs-up\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 36,\n                      columnNumber: 65\n                    }, this), \" \", skill]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 36,\n                    columnNumber: 61\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 34,\n                  columnNumber: 53\n                }, this) : /*#__PURE__*/_jsxDEV(Fragment, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 39,\n                  columnNumber: 54\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n                className: \"field\",\n                children: \"Education\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 45\n              }, this), aprofile.education.length > 0 ? /*#__PURE__*/_jsxDEV(Fragment, {\n                children: aprofile.education.map(edu => /*#__PURE__*/_jsxDEV(Fragment, {\n                  children: /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                      className: \"fa fa-university\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 47,\n                      columnNumber: 61\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [\" \", /*#__PURE__*/_jsxDEV(\"i\", {\n                        className: \"fa fa-book\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 48,\n                        columnNumber: 65\n                      }, this), \"Studied at \", edu.school]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 48,\n                      columnNumber: 61\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                        className: \"fa fa-book\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 49,\n                        columnNumber: 64\n                      }, this), edu.fieldofstudy]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 49,\n                      columnNumber: 61\n                    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                        className: \"fa fa-book\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 50,\n                        columnNumber: 64\n                      }, this), \" From \", /*#__PURE__*/_jsxDEV(Moment, {\n                        format: \"YYYY/MM/DD\",\n                        children: edu.from\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 50,\n                        columnNumber: 100\n                      }, this), \" -\", edu.to === null ? 'Current' : /*#__PURE__*/_jsxDEV(Moment, {\n                        format: \"YYYY/MM/DD\",\n                        children: edu.to\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 51,\n                        columnNumber: 71\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 50,\n                      columnNumber: 61\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 46,\n                    columnNumber: 57\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 45,\n                  columnNumber: 85\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 49\n              }, this) : /*#__PURE__*/_jsxDEV(Fragment, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 50\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"m-0\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"field\",\n                  children: \"Rating\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 64\n                }, this), \" : \", aprofile.rating]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"m-0\",\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"field\",\n                  children: \"Date of Application\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 65\n                }, this), \" : \", /*#__PURE__*/_jsxDEV(Moment, {\n                  format: \"YYYY/MM/DD\",\n                  children: app.dateofapplication\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 118\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"m-0\",\n                children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"field\",\n                  children: \"SOP\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 65\n                }, this), \" : \", app.sop]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 45\n              }, this), app.shortlisted === false && app.accepted === false && /*#__PURE__*/_jsxDEV(Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(Link, {\n                  onClick: () => shortlistApplication(match.params.id, aprofile._id),\n                  className: \"btn btn-primary m-1 login\",\n                  children: \"Shortlist\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(Link, {\n                  onClick: () => rejectApplication(match.params.id, aprofile._id),\n                  className: \"btn btn-danger m-1 login\",\n                  children: \"Reject\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 101\n              }, this), app.shortlisted === true && app.accepted === false && /*#__PURE__*/_jsxDEV(Fragment, {\n                children: [parseInt(job.job.maxap.position) > aprofile.applications.filter(app => app.accepted === true).length ? /*#__PURE__*/_jsxDEV(Link, {\n                  onClick: () => acceptApplication(match.params.id, aprofile._id),\n                  className: \"btn btn-warning m-1 login\",\n                  children: \"Accept\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 53\n                }, this) : /*#__PURE__*/_jsxDEV(Link, {\n                  onClick: () => setAlert('No more positions left for this job', 'danger'),\n                  className: \"btn btn-warning m-1 login\",\n                  children: \"Accept\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 57\n                }, this), /*#__PURE__*/_jsxDEV(Link, {\n                  onClick: () => rejectApplication(match.params.id, aprofile._id),\n                  className: \"btn btn-danger m-1 login\",\n                  children: \"Reject\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 100\n              }, this), app.shortlisted === false && app.accepted === true && /*#__PURE__*/_jsxDEV(Fragment, {\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  className: \"btn btn-info m-1 login\",\n                  children: \"Accepted\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 100\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 132\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 33\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"No Applicants\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n\n_s(JobApplicants, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = JobApplicants;\nJobApplicants.propTypes = {\n  getProfilesByJobId: PropTypes.func.isRequired,\n  getJobById: PropTypes.func.isRequired,\n  setAlert: PropTypes.func.isRequired,\n  rejectApplication: PropTypes.func.isRequired,\n  shortlistApplication: PropTypes.func.isRequired,\n  acceptApplication: PropTypes.func.isRequired,\n  aprofile: PropTypes.object.isRequired,\n  job: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  aprofile: state.aprofile,\n  job: state.job\n});\n\nexport default connect(mapStateToProps, {\n  getProfilesByJobId,\n  getJobById,\n  setAlert,\n  rejectApplication,\n  shortlistApplication,\n  acceptApplication\n})(JobApplicants);\n\nvar _c;\n\n$RefreshReg$(_c, \"JobApplicants\");","map":{"version":3,"sources":["/home/rahul/JobApplication/frontend/src/components/recruiter/JobApplicants.js"],"names":["React","useEffect","Fragment","PropTypes","connect","Link","Moment","getProfilesByJobId","rejectApplication","shortlistApplication","acceptApplication","getJobById","setAlert","Spinner","SortFeatureApplicant","JobApplicants","match","aprofile","loading","aprofiles","job","params","id","length","map","applications","app","rejected","user","name","skills","skill","education","edu","school","fieldofstudy","from","to","rating","dateofapplication","sop","shortlisted","accepted","_id","parseInt","maxap","position","filter","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport Moment from 'react-moment';\nimport { getProfilesByJobId, rejectApplication, shortlistApplication, acceptApplication } from '../../actions/aprofile';\nimport { getJobById } from '../../actions/job';\nimport { setAlert } from '../../actions/alert';\nimport Spinner from '../layout/Spinner';\nimport SortFeatureApplicant from './SortFeatureApplicant';\n\nconst JobApplicants = ({ match, getProfilesByJobId, getJobById, setAlert, rejectApplication, shortlistApplication, acceptApplication, aprofile: { loading, aprofiles }, job }) => {\n    useEffect(() => {\n        getProfilesByJobId(match.params.id);\n        getJobById(match.params.id);\n    }, []);\n    return (\n        <Fragment>\n            {loading || job.loading ? <Spinner /> : (\n                <Fragment>\n                    <h1 className=\"text-center heading\">Applicants</h1>\n                    {aprofiles.length > 0 ? (\n                        <Fragment>\n                            <SortFeatureApplicant jobId={match.params.id} />\n                            <Link className=\"btn btn-light m-1 login\" to=\"/rec-job-listing\">Go Back <i className=\"fa fa-backward\"></i></Link>\n                            {aprofiles.map(aprofile => (\n                                <Fragment>\n                                    <div className=\"container bg-light m-1 border border-success\">\n                                        {aprofile.applications.map(app => app.job === match.params.id && app.rejected === false && <Fragment>\n                                            <h3 className=\"text-center title\">{aprofile.user.name}</h3>\n                                            <h3 className=\"field\">Skills</h3>\n                                            <ul>\n                                                {aprofile.skills.length > 0 ? (\n                                                    <Fragment>\n                                                        {aprofile.skills.map(skill => (\n                                                            <li><i className=\"fa fa-thumbs-up\"></i> {skill}</li>\n                                                        ))}\n                                                    </Fragment>\n                                                ) : (<Fragment></Fragment>)}\n\n                                            </ul>\n                                            <h3 className=\"field\">Education</h3>\n                                            {aprofile.education.length > 0 ? (\n                                                <Fragment>\n                                                    {aprofile.education.map(edu => (<Fragment>\n                                                        <div>\n                                                            <i className=\"fa fa-university\"></i>\n                                                            <p> <i className=\"fa fa-book\"></i>Studied at {edu.school}</p>\n                                                            <p><i className=\"fa fa-book\"></i>{edu.fieldofstudy}</p>\n                                                            <p><i className=\"fa fa-book\"></i> From <Moment format=\"YYYY/MM/DD\">{edu.from}</Moment> -\n                                    {edu.to === null ? ('Current') : (<Moment format=\"YYYY/MM/DD\">{edu.to}</Moment>)}\n                                                            </p>\n                                                        </div>\n                                                    </Fragment>\n                                                    ))}\n                                                </Fragment>\n                                            ) : (<Fragment></Fragment>)}\n                                            <p className=\"m-0\"><span className=\"field\">Rating</span> : {aprofile.rating}</p>\n                                            <p className=\"m-0\"> <span className=\"field\">Date of Application</span> : <Moment format=\"YYYY/MM/DD\">{app.dateofapplication}</Moment></p>\n                                            <p className=\"m-0\"> <span className=\"field\">SOP</span> : {app.sop}</p>\n                                            {app.shortlisted === false && app.accepted === false && <Fragment>\n                                                <Link onClick={() => shortlistApplication(match.params.id, aprofile._id)} className=\"btn btn-primary m-1 login\">Shortlist</Link>\n                                                <Link onClick={() => rejectApplication(match.params.id, aprofile._id)} className=\"btn btn-danger m-1 login\">Reject</Link>\n                                            </Fragment>}\n                                            {app.shortlisted === true && app.accepted === false && <Fragment>\n                                                {parseInt(job.job.maxap.position) > aprofile.applications.filter(app => app.accepted === true).length ? (\n                                                    <Link onClick={() => acceptApplication(match.params.id, aprofile._id)} className=\"btn btn-warning m-1 login\">Accept</Link>\n                                                ) : (\n                                                        <Link onClick={() => setAlert('No more positions left for this job', 'danger')} className=\"btn btn-warning m-1 login\">Accept</Link>\n                                                    )}\n                                                <Link onClick={() => rejectApplication(match.params.id, aprofile._id)} className=\"btn btn-danger m-1 login\">Reject</Link>\n                                            </Fragment>}\n                                            {app.shortlisted === false && app.accepted === true && <Fragment>\n                                                <Link className=\"btn btn-info m-1 login\">Accepted</Link>\n\n                                            </Fragment>}\n                                        </Fragment>)}\n                                    </div>\n                                </Fragment>\n                            ))}\n                        </Fragment>\n                    ) : (\n                            <Fragment>\n                                <h2>No Applicants</h2>\n                            </Fragment>\n                        )}\n                </Fragment>\n            )}\n        </Fragment>\n    )\n};\n\nJobApplicants.propTypes = {\n    getProfilesByJobId: PropTypes.func.isRequired,\n    getJobById: PropTypes.func.isRequired,\n    setAlert: PropTypes.func.isRequired,\n    rejectApplication: PropTypes.func.isRequired,\n    shortlistApplication: PropTypes.func.isRequired,\n    acceptApplication: PropTypes.func.isRequired,\n    aprofile: PropTypes.object.isRequired,\n    job: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    aprofile: state.aprofile,\n    job: state.job\n});\n\nexport default connect(mapStateToProps, { getProfilesByJobId, getJobById, setAlert, rejectApplication, shortlistApplication, acceptApplication })(JobApplicants);\n"]},"metadata":{},"sourceType":"module"}