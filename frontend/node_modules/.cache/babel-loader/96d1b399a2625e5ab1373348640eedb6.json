{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/rahul/JobApplication/frontend/src/components/forms/ApplyJob.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { applyJob } from '../../actions/job';\n\nconst ApplyJob = ({\n  match,\n  applyJob,\n  history\n}) => {\n  _s();\n\n  const [sopData, setSopData] = useState({\n    sop: ''\n  });\n  const {\n    sop\n  } = sopData;\n\n  const onChange = e => setSopData({ ...sopData,\n    [e.target.name]: e.target.value\n  });\n\n  const onSubmit = async e => {\n    e.preventDefault();\n    console.log(sopData);\n    applyJob(match.params.id, sop, history);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Apply for the Job\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"form\",\n      onSubmit: e => onSubmit(e),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          placeholder: \"Statement Of Purpose\",\n          name: \"sop\",\n          value: sop,\n          onChange: e => onChange(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n          children: \" Your Short Bio\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        className: \"btn btn-primary m-1\",\n        value: \"Apply for Job\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ApplyJob, \"FXBrKz9GsbTQnyWf0og4RYT1bYo=\");\n\n_c = ApplyJob;\nApplyJob.propTypes = {\n  applyJob: PropTypes.func.isRequired\n};\nexport default connect(null, {\n  applyJob\n})(withRouter(ApplyJob));\n\nvar _c;\n\n$RefreshReg$(_c, \"ApplyJob\");","map":{"version":3,"sources":["/home/rahul/JobApplication/frontend/src/components/forms/ApplyJob.js"],"names":["React","useState","Fragment","PropTypes","connect","withRouter","applyJob","ApplyJob","match","history","sopData","setSopData","sop","onChange","e","target","name","value","onSubmit","preventDefault","console","log","params","id","propTypes","func","isRequired"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,QAAT,QAAyB,mBAAzB;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASF,EAAAA,QAAT;AAAmBG,EAAAA;AAAnB,CAAD,KAAkC;AAAA;;AAC/C,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBV,QAAQ,CAAC;AACnCW,IAAAA,GAAG,EAAE;AAD8B,GAAD,CAAtC;AAGA,QAAM;AAAEA,IAAAA;AAAF,MAAUF,OAAhB;;AAEA,QAAMG,QAAQ,GAAGC,CAAC,IAAIH,UAAU,CAAC,EAC7B,GAAGD,OAD0B;AAE7B,KAACI,CAAC,CAACC,MAAF,CAASC,IAAV,GAAiBF,CAAC,CAACC,MAAF,CAASE;AAFG,GAAD,CAAhC;;AAKA,QAAMC,QAAQ,GAAG,MAAMJ,CAAN,IAAW;AACxBA,IAAAA,CAAC,CAACK,cAAF;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYX,OAAZ;AACAJ,IAAAA,QAAQ,CAACE,KAAK,CAACc,MAAN,CAAaC,EAAd,EAAkBX,GAAlB,EAAuBH,OAAvB,CAAR;AACH,GAJD;;AAMA,sBACI,QAAC,QAAD;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAuB,MAAA,QAAQ,EAAEK,CAAC,IAAII,QAAQ,CAACJ,CAAD,CAA9C;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACI;AAAU,UAAA,WAAW,EAAC,sBAAtB;AAA6C,UAAA,IAAI,EAAC,KAAlD;AAAwD,UAAA,KAAK,EAAEF,GAA/D;AAAoE,UAAA,QAAQ,EAAEE,CAAC,IAAID,QAAQ,CAACC,CAAD;AAA3F;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,SAAS,EAAC,qBAA/B;AAAqD,QAAA,KAAK,EAAC;AAA3D;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CA7BD;;GAAMP,Q;;KAAAA,Q;AA+BNA,QAAQ,CAACiB,SAAT,GAAqB;AACjBlB,EAAAA,QAAQ,EAAEH,SAAS,CAACsB,IAAV,CAAeC;AADR,CAArB;AAIA,eAAetB,OAAO,CAAC,IAAD,EAAO;AAAEE,EAAAA;AAAF,CAAP,CAAP,CAA4BD,UAAU,CAACE,QAAD,CAAtC,CAAf","sourcesContent":["import React, { useState, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router-dom';\nimport { applyJob } from '../../actions/job';\n\nconst ApplyJob = ({ match, applyJob, history }) => {\n    const [sopData, setSopData] = useState({\n        sop: '',\n    });\n    const { sop } = sopData;\n\n    const onChange = e => setSopData({\n        ...sopData,\n        [e.target.name]: e.target.value\n    });\n\n    const onSubmit = async e => {\n        e.preventDefault();\n        console.log(sopData);\n        applyJob(match.params.id, sop, history);\n    };\n\n    return (\n        <Fragment>\n            <h1>Apply for the Job</h1>\n            <form className=\"form\" onSubmit={e => onSubmit(e)}>\n                <div className=\"form-group\">\n                    <textarea placeholder=\"Statement Of Purpose\" name=\"sop\" value={sop} onChange={e => onChange(e)}></textarea>\n                    <small> Your Short Bio</small>\n                </div>\n                <input type=\"submit\" className=\"btn btn-primary m-1\" value=\"Apply for Job\" />\n            </form>\n        </Fragment>\n    )\n};\n\nApplyJob.propTypes = {\n    applyJob: PropTypes.func.isRequired,\n};\n\nexport default connect(null, { applyJob })(withRouter(ApplyJob));\n"]},"metadata":{},"sourceType":"module"}