{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { clearAprofile } from './aprofile';\nimport { clearRprofile } from './rprofile';\nimport { clearJobs } from './job';\nimport setAuthToken from '../utils/setAuthToken';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT } from './types'; // load user\n\nexport const loadUser = () => async dispatch => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  try {\n    const res = await axios.get('/api/auth');\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR\n    });\n  }\n}; // Register User\n\nexport const register = ({\n  name,\n  email,\n  typeofuser,\n  password\n}) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    name,\n    email,\n    typeofuser,\n    password\n  });\n\n  try {\n    const res = await axios.post('api/users', body, config);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n}; // Login User\n\nexport const login = (email, password) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    email,\n    password\n  });\n\n  try {\n    const res = await axios.post('api/auth', body, config);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  }\n}; // logout User\n\nexport const logoutUser = () => async dispatch => {\n  dispatch({\n    type: LOGOUT\n  });\n  dispatch(clearAprofile());\n  dispatch(clearRprofile());\n  dispatch(clearJobs());\n};","map":{"version":3,"sources":["/home/rahul/JobApplication/frontend/src/actions/auth.js"],"names":["axios","setAlert","clearAprofile","clearRprofile","clearJobs","setAuthToken","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","loadUser","dispatch","localStorage","token","res","get","type","payload","data","err","register","name","email","typeofuser","password","config","headers","body","JSON","stringify","post","errors","response","forEach","error","msg","login","logoutUser"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { setAlert } from './alert';\nimport { clearAprofile } from './aprofile';\nimport { clearRprofile } from './rprofile';\nimport { clearJobs } from './job';\nimport setAuthToken from '../utils/setAuthToken';\n\nimport {\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    USER_LOADED,\n    AUTH_ERROR,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT\n} from './types';\n\n// load user\nexport const loadUser = () => async dispatch => {\n    if (localStorage.token) {\n        setAuthToken(localStorage.token);\n    }\n\n    try {\n        const res = await axios.get('/api/auth');\n        dispatch({\n            type: USER_LOADED,\n            payload: res.data\n        });\n    } catch (err) {\n        dispatch({\n            type: AUTH_ERROR\n        })\n    }\n};\n\n\n// Register User\nexport const register = ({ name, email, typeofuser, password }) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n    const body = JSON.stringify({ name, email, typeofuser, password });\n\n    try {\n        const res = await axios.post('api/users', body, config);\n        dispatch({\n            type: REGISTER_SUCCESS,\n            payload: res.data\n        })\n        dispatch(loadUser());\n    } catch (err) {\n        const errors = err.response.data.errors;\n\n        if (errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n        }\n        dispatch({\n            type: REGISTER_FAIL,\n        })\n    }\n};\n\n// Login User\nexport const login = (email, password) => async dispatch => {\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n    const body = JSON.stringify({ email, password });\n\n    try {\n        const res = await axios.post('api/auth', body, config);\n        dispatch({\n            type: LOGIN_SUCCESS,\n            payload: res.data\n        });\n        dispatch(loadUser());\n    } catch (err) {\n        const errors = err.response.data.errors;\n\n        if (errors) {\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n        }\n        dispatch({\n            type: LOGIN_FAIL,\n        });\n    }\n};\n\n// logout User\nexport const logoutUser = () => async dispatch => {\n    dispatch({\n        type: LOGOUT,\n    });\n    dispatch(clearAprofile());\n    dispatch(clearRprofile());\n    dispatch(clearJobs());\n};"]},"metadata":{},"sourceType":"module"}