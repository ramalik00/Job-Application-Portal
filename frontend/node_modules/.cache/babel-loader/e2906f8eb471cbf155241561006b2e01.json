{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/rahul/JobApplication/frontend/src/components/applicant/MyApplications.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Moment from 'react-moment';\nimport { getAppliedJobs } from '../../actions/job';\nimport RateJob from './RateJob';\nimport Spinner from '../layout/Spinner';\n\nconst MyApplications = ({\n  getAppliedJobs,\n  job: {\n    jobs,\n    loading\n  },\n  aprofile: {\n    aprofile\n  }\n}) => {\n  _s();\n\n  useEffect(() => {\n    getAppliedJobs();\n  }, [getAppliedJobs]);\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 24\n    }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-center heading\",\n        children: \"My Applications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 21\n      }, this), jobs.length > 0 ? /*#__PURE__*/_jsxDEV(Fragment, {\n        children: jobs.map(job => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container bg-light m-1 border border-success\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"job-title title\",\n            children: job.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"m-0\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"field\",\n              children: \"Recruiter Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 56\n            }, this), \" : \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"title\",\n              children: [\" \", job.user.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 23,\n              columnNumber: 104\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"m-0\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"field\",\n              children: \"Rating\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 56\n            }, this), \" :\", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"title\",\n              children: [\" \", job.rating]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 24,\n              columnNumber: 95\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"m-0\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"field\",\n              children: \"Salary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 56\n            }, this), \" : \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"title\",\n              children: [\" \", job.salary]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 96\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"m-0\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"field\",\n              children: \"Duration\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 57\n            }, this), \" : \", job.duration === '0' ? /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"title\",\n              children: \" Indefinite\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 124\n            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"title\",\n              children: [\" \", job.duration]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 171\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"m-0\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"field\",\n              children: \"Deadline\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 56\n            }, this), \" : \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"title\",\n              children: /*#__PURE__*/_jsxDEV(Moment, {\n                format: \"YYYY/MM/DD\",\n                children: job.deadline\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 122\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 98\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 37\n          }, this), aprofile.applications.map(app => app.job === job._id && /*#__PURE__*/_jsxDEV(Fragment, {\n            children: [app.rejected === false && app.shortlisted === false && app.accepted === false && /*#__PURE__*/_jsxDEV(Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"m-0\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"field\",\n                  children: \"Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 30,\n                  columnNumber: 64\n                }, this), \" : \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"title\",\n                  children: \" Pending\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 30,\n                  columnNumber: 104\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 123\n            }, this), app.rejected === true && app.shortlisted === false && app.accepted === false && /*#__PURE__*/_jsxDEV(Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"m-0\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"field\",\n                  children: \"Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 33,\n                  columnNumber: 64\n                }, this), \" : \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"title\",\n                  children: \" Rejected\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 33,\n                  columnNumber: 104\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 122\n            }, this), app.rejected === false && app.shortlisted === true && app.accepted === false && /*#__PURE__*/_jsxDEV(Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"m-0\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"field\",\n                  children: \"Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 36,\n                  columnNumber: 64\n                }, this), \" : \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"title\",\n                  children: \" Shortlisted\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 36,\n                  columnNumber: 104\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 122\n            }, this), app.rejected === false && app.shortlisted === false && app.accepted === true && /*#__PURE__*/_jsxDEV(Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"m-0\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"field\",\n                  children: \"Status\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 39,\n                  columnNumber: 64\n                }, this), \" :\", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"title\",\n                  children: \" Accepted\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 39,\n                  columnNumber: 103\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"field\",\n                  children: \"Date of Joining\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 40,\n                  columnNumber: 48\n                }, this), \" : \", /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"title\",\n                  children: /*#__PURE__*/_jsxDEV(Moment, {\n                    format: \"YYYY/MM/DD\",\n                    children: app.dateofjoining\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 40,\n                    columnNumber: 121\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 40,\n                  columnNumber: 97\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(RateJob, {\n                JobId: job._id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 122\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 94\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 25\n      }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"No Applied Jobs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 29\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MyApplications, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = MyApplications;\nMyApplications.propTypes = {\n  getAppliedJobs: PropTypes.func.isRequired,\n  job: PropTypes.object.isRequired,\n  aprofile: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  job: state.job,\n  aprofile: state.aprofile\n});\n\nexport default connect(mapStateToProps, {\n  getAppliedJobs\n})(MyApplications);\n\nvar _c;\n\n$RefreshReg$(_c, \"MyApplications\");","map":{"version":3,"sources":["/home/rahul/JobApplication/frontend/src/components/applicant/MyApplications.js"],"names":["React","Fragment","useEffect","PropTypes","connect","Moment","getAppliedJobs","RateJob","Spinner","MyApplications","job","jobs","loading","aprofile","length","map","title","user","name","rating","salary","duration","deadline","applications","app","_id","rejected","shortlisted","accepted","dateofjoining","propTypes","func","isRequired","object","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Moment from 'react-moment';\nimport { getAppliedJobs } from '../../actions/job';\nimport RateJob from './RateJob';\nimport Spinner from '../layout/Spinner';\n\nconst MyApplications = ({ getAppliedJobs, job: { jobs, loading }, aprofile: { aprofile } }) => {\n    useEffect(() => {\n        getAppliedJobs();\n    }, [getAppliedJobs]);\n    return (\n        <Fragment>\n            {loading ? <Spinner /> : (\n                <Fragment>\n                    <h1 className=\"text-center heading\">My Applications</h1>\n                    {jobs.length > 0 ? (\n                        <Fragment>\n                            {jobs.map(job => (\n                                <div className=\"container bg-light m-1 border border-success\">\n                                    <h3 className=\"job-title title\">{job.title}</h3>\n                                    <p className=\"m-0\"><span className=\"field\">Recruiter Name</span> : <span className=\"title\"> {job.user.name}</span></p>\n                                    <p className=\"m-0\"><span className=\"field\">Rating</span> :<span className=\"title\"> {job.rating}</span></p>\n                                    <p className=\"m-0\"><span className=\"field\">Salary</span> : <span className=\"title\"> {job.salary}</span></p>\n                                    <p className=\"m-0\"> <span className=\"field\">Duration</span> : {job.duration === '0' ? (<span className=\"title\"> Indefinite</span>) : (<span className=\"title\"> {job.duration}</span>)}</p>\n                                    <p className=\"m-0\"><span className=\"field\">Deadline</span> : <span className=\"title\"><Moment format=\"YYYY/MM/DD\">{job.deadline}</Moment></span></p>\n                                    {aprofile.applications.map(app => app.job === job._id && <Fragment>\n                                        {app.rejected === false && app.shortlisted === false && app.accepted === false && <Fragment>\n                                            <p className=\"m-0\"><span className=\"field\">Status</span> : <span className=\"title\"> Pending</span></p>\n                                        </Fragment>}\n                                        {app.rejected === true && app.shortlisted === false && app.accepted === false && <Fragment>\n                                            <p className=\"m-0\"><span className=\"field\">Status</span> : <span className=\"title\"> Rejected</span></p>\n                                        </Fragment>}\n                                        {app.rejected === false && app.shortlisted === true && app.accepted === false && <Fragment>\n                                            <p className=\"m-0\"><span className=\"field\">Status</span> : <span className=\"title\"> Shortlisted</span></p>\n                                        </Fragment>}\n                                        {app.rejected === false && app.shortlisted === false && app.accepted === true && <Fragment>\n                                            <p className=\"m-0\"><span className=\"field\">Status</span> :<span className=\"title\"> Accepted</span></p>\n                                            <p><span className=\"field\">Date of Joining</span> : <span className=\"title\"><Moment format=\"YYYY/MM/DD\">{app.dateofjoining}</Moment></span> </p>\n                                            {/* Rate the Job */}\n                                            <RateJob JobId={job._id} />\n                                        </Fragment>}\n                                    </Fragment>)}\n                                </div>\n                            ))}\n                        </Fragment>\n                    ) : (\n                            <Fragment>\n                                <h2>No Applied Jobs</h2>\n                            </Fragment>\n                        )}\n                </Fragment>\n            )}\n        </Fragment>\n    )\n};\n\nMyApplications.propTypes = {\n    getAppliedJobs: PropTypes.func.isRequired,\n    job: PropTypes.object.isRequired,\n    aprofile: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    job: state.job,\n    aprofile: state.aprofile\n});\n\nexport default connect(mapStateToProps, { getAppliedJobs })(MyApplications);\n"]},"metadata":{},"sourceType":"module"}